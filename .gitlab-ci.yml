cache:
    key: ${CI_COMMIT_REF_SLUG}

before_script:
    - >
        echo > auth.json -e '{
          "http-basic":{
            "gitlab.skillum.ru": {
              "username":"gitlab-ci-token",
              "password": "'${CI_JOB_TOKEN}'"
            }
          }
        }'

stages:
    - test
    - build

phpunit:
    stage: test
    script:
        - echo "prod"
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d --build
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps -u root php /usr/local/bin/composer --no-interaction install --prefer-dist -o --no-ansi
        - echo -e "machine gitlab.skillum.ru\nlogin gitlab-ci-token\npassword ${CI_JOB_TOKEN}" > .netrc
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps node yarn install
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps php bin/console assets:install public
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps -u root php bin/console fos:js-routing:dump --format=json --target=public/js/fos_js_routes.json
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps php php vendor/bin/php-cs-fixer fix --dry-run --config=.php_cs.dist --using-cache=no --show-progress=none -v
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps node yarn build --no-progress
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps php bin/console do:da:cr
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps php bin/console do:mi:mi --no-interaction
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps php bin/console do:sc:va
        - cp phpunit.xml.dist phpunit.xml
        - docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm --no-deps -u root php php bin/phpunit

release:
    stage: build
    when: manual
    only:
        - master
    variables:
        CI_REGISTRY_IMAGE: hub.retailcrm.pro/retailcrm/stripe
        CI_REGISTRY: hub.retailcrm.pro
    script:
        - echo -e "machine gitlab.skillum.ru\nlogin gitlab-ci-token\npassword ${CI_JOB_TOKEN}" > .netrc

        - docker-compose build php node

        - docker-compose run -e APP_ENV=prod -e APP_DEBUG=0 --rm --no-deps -u root php /usr/local/bin/composer --no-interaction install --no-scripts --prefer-dist --no-dev
        - docker-compose run -e APP_ENV=prod -e APP_DEBUG=0 --rm --no-deps -u root php bin/console --env=prod assets:install public
        - docker-compose run -e APP_ENV=prod -e APP_DEBUG=0 --rm --no-deps -u root php bin/console --env=prod fos:js-routing:dump --format=json --target=public/js/fos_js_routes.json

        # build static
        - docker-compose run --rm --no-deps node sh -c 'yarn install && yarn build'

        # set/fix permissions
        - docker-compose run --rm --no-deps -u root php chmod -R a-w /var/www/stripe
        - docker-compose run --rm --no-deps -u root php chown -R www-data:www-data /var/www/stripe

        - docker build -t $CI_REGISTRY_IMAGE -f services/php_prod/Dockerfile ./

        - docker login ${CI_REGISTRY} -u ${DOCKER_HUB_USER} -p ${DOCKER_HUB_PASS}
        - docker push $CI_REGISTRY_IMAGE:latest
